// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: transit.proto

/*
Package transit is a generated protocol buffer package.

It is generated from these files:
	transit.proto

It has these top-level messages:
	Pong
	Published
	Publication
	Entry
	Subscription
	Notification
	Acknowledgement
	Sub
	Acked
	ApplyCommands
	Command
	Server
	BoxItem
	Snapshot
	Box
	Update
	Success
	String
	Strings
	StringMap
	Void
*/
package transit

import fmt "fmt"
import go_proto_validators "github.com/mwitkow/go-proto-validators"
import proto "github.com/gogo/protobuf/proto"
import golang_proto "github.com/golang/protobuf/proto"
import math "math"
import _ "github.com/golang/protobuf/ptypes/any"
import _ "github.com/gogo/googleapis/google/api"
import _ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
import _ "github.com/gogo/protobuf/gogoproto"
import _ "github.com/mwitkow/go-proto-validators"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *Pong) Validate() error {
	return nil
}
func (this *Published) Validate() error {
	if !(this.ID > 0) {
		return go_proto_validators.FieldError("ID", fmt.Errorf(`ID must a positive integer`))
	}
	return nil
}
func (this *Publication) Validate() error {
	if this.Entry != nil {
		if err := go_proto_validators.CallValidatorIfExists(this.Entry); err != nil {
			return go_proto_validators.FieldError("Entry", err)
		}
	}
	return nil
}
func (this *Entry) Validate() error {
	if this.Topic == "" {
		return go_proto_validators.FieldError("Topic", fmt.Errorf(`A topic must be supplied`))
	}
	if this.Message != nil {
		if err := go_proto_validators.CallValidatorIfExists(this.Message); err != nil {
			return go_proto_validators.FieldError("Message", err)
		}
	}
	// Validation of proto3 map<> fields is unsupported.
	return nil
}
func (this *Subscription) Validate() error {
	return nil
}
func (this *Notification) Validate() error {
	if this.Sub != nil {
		if err := go_proto_validators.CallValidatorIfExists(this.Sub); err != nil {
			return go_proto_validators.FieldError("Sub", err)
		}
	}
	if this.Entry != nil {
		if err := go_proto_validators.CallValidatorIfExists(this.Entry); err != nil {
			return go_proto_validators.FieldError("Entry", err)
		}
	}
	return nil
}
func (this *Acknowledgement) Validate() error {
	if this.Sub != nil {
		if err := go_proto_validators.CallValidatorIfExists(this.Sub); err != nil {
			return go_proto_validators.FieldError("Sub", err)
		}
	}
	return nil
}
func (this *Sub) Validate() error {
	return nil
}
func (this *Acked) Validate() error {
	return nil
}
func (this *ApplyCommands) Validate() error {
	for _, item := range this.Commands {
		if item != nil {
			if err := go_proto_validators.CallValidatorIfExists(item); err != nil {
				return go_proto_validators.FieldError("Commands", err)
			}
		}
	}
	return nil
}
func (this *Command) Validate() error {
	return nil
}
func (this *Server) Validate() error {
	return nil
}
func (this *BoxItem) Validate() error {
	if this.Entry != nil {
		if err := go_proto_validators.CallValidatorIfExists(this.Entry); err != nil {
			return go_proto_validators.FieldError("Entry", err)
		}
	}
	return nil
}
func (this *Snapshot) Validate() error {
	for _, item := range this.Boxes {
		if item != nil {
			if err := go_proto_validators.CallValidatorIfExists(item); err != nil {
				return go_proto_validators.FieldError("Boxes", err)
			}
		}
	}
	// Validation of proto3 map<> fields is unsupported.
	return nil
}
func (this *Box) Validate() error {
	// Validation of proto3 map<> fields is unsupported.
	return nil
}
func (this *Update) Validate() error {
	if this.Entry != nil {
		if err := go_proto_validators.CallValidatorIfExists(this.Entry); err != nil {
			return go_proto_validators.FieldError("Entry", err)
		}
	}
	if this.Inbox != nil {
		if err := go_proto_validators.CallValidatorIfExists(this.Inbox); err != nil {
			return go_proto_validators.FieldError("Inbox", err)
		}
	}
	return nil
}
func (this *Success) Validate() error {
	return nil
}
func (this *String) Validate() error {
	return nil
}
func (this *Strings) Validate() error {
	return nil
}
func (this *StringMap) Validate() error {
	// Validation of proto3 map<> fields is unsupported.
	return nil
}
func (this *Void) Validate() error {
	return nil
}
